{"version":3,"sources":["src/modalPopUpFunctions.ts","src/choosePokemonsPage/createActivePlayerName.ts","src/choosePokemonsPage/createPlayerNames.ts","src/pokemonClass.ts","src/pokemonFactory.ts","assets/poke_data.json","src/fightPage/createActivePokemon.ts","src/fightPage/createActivePlayer.ts","src/fightPage/createHPBars.ts","src/fightPage/createFightPagePokeballs.ts","src/fightPage/updateMovesList.ts","src/fightClass.ts","src/fightPage/resultModalPopUpFunctions.ts","src/fightPage/animations.ts","src/fightPage/buttonsEventListeners.ts","src/gameHandlerClass.ts","src/fightPage/renderFightPage.ts","src/fightPage/startBattle.ts","src/choosePokemonsPage/startGameIfReady.ts","src/choosePokemonsPage/addChosenPokemon.ts","src/choosePokemonsPage/createPokeballs.ts","src/choosePokemonsPage/createPokemons.ts","src/choosePokemonsPage/choosePokemonsPage.ts","src/playerClass.ts","src/activateStart.ts","src/index.ts"],"names":["module","exports","pokemons","name","types","stats","hp","attack","defense","moves","type"],"mappings":"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","file":"src.b8a61086.js","sourceRoot":"..","sourcesContent":["export const showModal = (\n  screenToDisplay: HTMLDivElement,\n  startingPosition: string\n) => {\n  screenToDisplay.style.display = startingPosition;\n};\n\nexport const hideModal = (screenToDisplay: HTMLDivElement) => {\n  const exitButton = screenToDisplay.querySelector(\".exitButton\");\n  exitButton?.addEventListener(\"click\", () => {\n    screenToDisplay.style.display = \"none\";\n  });\n};\n","import { Player } from \"../playerClass\";\n\nexport const createActivePlayerName = (activePlayer: Player) => {\n  let whoChoosesPokemonText = document.querySelector(\"#whoChoosesParagraph\")!;\n  activePlayer.pokemons.length === 3\n    ? (whoChoosesPokemonText.textContent = \"Wait for the game to start...\")\n    : (whoChoosesPokemonText.textContent = `${activePlayer.name} chooses 1 pokemon`);\n};\n","import { Player } from \"../playerClass\";\n\nexport const createPlayerNames = (playerOne: Player, playerTwo: Player) => {\n  let playerOneNameAreaText = document.querySelector(\"#choosePagePlayer1Name\")!;\n  playerOneNameAreaText.textContent = playerOne.name;\n  let playerTwoNameAreaText = document.querySelector(\"#choosePagePlayer2Name\")!;\n  playerTwoNameAreaText.textContent = playerTwo.name;\n};\n","export type PokemonType =\n  | \"grass\"\n  | \"poison\"\n  | \"fire\"\n  | \"water\"\n  | \"bug\"\n  | \"normal\"\n  | \"flying\"\n  | \"electric\"\n  | \"ground\"\n  | \"fairy\"\n  | \"psychic\"\n  | \"fighting\"\n  | \"rock\";\n\n\nexport type PokemonMove = { moveName: string; moveType: PokemonType }\n\nexport class Pokemon {\n\n  private readonly _name: string;\n  private readonly _image: string;\n  private readonly _maxHP: number;\n  private _currentHP: number;\n  private readonly _attackPoints: number;\n  private readonly _defensePoints: number;\n  private readonly _types: PokemonType[];\n  private readonly _moves: PokemonMove[];\n\n  constructor(name: string, image: string, maxHP: number, attackPoints: number,\n    defensePoints: number, types: PokemonType[], moves: { moveName: string; moveType: PokemonType }[]) {\n\n    this._name = name;\n    this._image = image;\n    this._maxHP = maxHP;\n    this._currentHP = maxHP;\n    this._attackPoints = attackPoints;\n    this._defensePoints = defensePoints;\n    this._types = types;\n    this._moves = moves;\n  }\n\n\n  get name() {\n    return this._name;\n  }\n\n  get image() {\n    return this._image;\n  }\n\n  get currentHP() {\n    return this._currentHP;\n  }\n\n  get maxHP() {\n    return this._maxHP;\n  }\n\n  subtractHP(pointsToSubtract: number): void {\n    const newHP: number = this._currentHP - pointsToSubtract;\n    this._currentHP = Math.max(newHP, 0)\n  }\n\n  heal(): void {\n    this._currentHP = this._maxHP;\n  }\n\n  get attackPoints() {\n    return this._attackPoints;\n  }\n\n  get defensePoints() {\n    return this._defensePoints;\n  }\n\n  get types() {\n    return this._types;\n  }\n\n  get moves() {\n    return this._moves;\n  }\n\n  isAlive(): boolean {\n    return this._currentHP > 0;\n  }\n}\n","import { Pokemon } from \"./pokemonClass\"\nimport { PokemonType, PokemonMove } from \"./pokemonClass\"\n\n\nexport class PokemonFactory {\n    readonly _pokemons: Pokemon[];\n\n    constructor(pokeData: {\n        name: string; types: string[];\n        stats: { hp: number; attack: number; defense: number; };\n        moves: { name: string; type: string; }[]\n    }[]) {\n        this._pokemons = [];\n\n        for (let pokemon of pokeData) {\n\n            const pokeImg = \"../assets/\" + pokemon.name + \".png\"\n\n            const pokeMoves = pokemon.moves.reduce( (tab, move) => {\n                tab.push({moveName: move.name, moveType: move.type as PokemonType})\n                return tab\n                }, [] as PokemonMove[])\n\n            const pokeTypes: PokemonType[] = pokemon.types.map(v => v as PokemonType)\n\n            const pokemonObject = new Pokemon(this._capitalize(pokemon.name), pokeImg, \n                pokemon.stats.hp, pokemon.stats.attack, pokemon.stats.defense,\n                pokeTypes, pokeMoves)\n\n            this._pokemons.push(pokemonObject)\n        }\n    }\n\n    get pokemons(): Pokemon[] {\n        return this._pokemons\n    }\n\n    getPokemonByName(name: string): Pokemon {\n        const pokemon = this._pokemons.find( pokemon => pokemon.name.toLowerCase() === name.toLowerCase());\n        if (pokemon === undefined) {\n            throw new Error(`Pokemon ${name} is not found in the pokemon factory`)\n        }\n        return pokemon\n    }\n\n    _capitalize(str: string): string {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n      }\n}\n\n","module.exports={pokemons:[{name:\"bulbasaur\",types:[\"grass\",\"poison\"],stats:{hp:40,attack:51,defense:39},moves:[{name:\"razor-wind\",type:\"normal\"},{name:\"razor-leaf\",type:\"grass\"}]},{name:\"charmander\",types:[\"fire\"],stats:{hp:34,attack:55,defense:38},moves:[{name:\"mega-punch\",type:\"normal\"},{name:\"ember\",type:\"fire\"}]},{name:\"squirtle\",types:[\"water\"],stats:{hp:39,attack:53,defense:29},moves:[{name:\"mega-kick\",type:\"normal\"},{name:\"water-gun\",type:\"water\"}]},{name:\"weedle\",types:[\"bug\",\"poison\"],stats:{hp:35,attack:40,defense:35},moves:[{name:\"poison-sting\",type:\"poison\"},{name:\"string-shot\",type:\"poison\"}]},{name:\"pidgey\",types:[\"normal\",\"flying\"],stats:{hp:35,attack:42,defense:35},moves:[{name:\"razor-wind\",type:\"normal\"},{name:\"sky-attack\",type:\"flying\"}]},{name:\"rattata\",types:[\"normal\"],stats:{hp:30,attack:45,defense:35},moves:[{name:\"body-slam\",type:\"normal\"},{name:\"dig\",type:\"ground\"}]},{name:\"pikachu\",types:[\"electric\"],stats:{hp:33,attack:54,defense:33},moves:[{name:\"slam\",type:\"normal\"},{name:\"thunder-punch\",type:\"electric\"}]},{name:\"sandshrew\",types:[\"ground\"],stats:{hp:45,attack:42,defense:37},moves:[{name:\"headbutt\",type:\"normal\"},{name:\"earthquake\",type:\"ground\"}]},{name:\"clefairy\",types:[\"fairy\"],stats:{hp:40,attack:43,defense:38},moves:[{name:\"fire-punch\",type:\"fire\"},{name:\"ice-punch\",type:\"ice\"}]},{name:\"abra\",types:[\"psychic\"],stats:{hp:38,attack:45,defense:35},moves:[{name:\"mega-punch\",type:\"normal\"},{name:\"psychic\",type:\"psychic\"}]},{name:\"machop\",types:[\"fighting\"],stats:{hp:44,attack:55,defense:29},moves:[{name:\"karate-chop\",type:\"fighting\"},{name:\"rolling-kick\",type:\"fighting\"}]},{name:\"geodude\",types:[\"rock\",\"ground\"],stats:{hp:37,attack:45,defense:37},moves:[{name:\"rock-throw\",type:\"rock\"},{name:\"earthquake\",type:\"ground\"}]}]};","import { Player } from \"../playerClass\";\nimport { GameHandler } from \"../gameHandlerClass\";\n\nexport const createActivePokemon = (gameHandler: GameHandler) => {\n  const playerOneActivePokemonImageArea = document.querySelector(\n    \"#pokemon-image-player1\"\n  ) as HTMLImageElement;\n  const playerTwoActivePokemonImageArea = document.querySelector(\n    \"#pokemon-image-player2\"\n  ) as HTMLImageElement;\n  const playerOneActivePokemonNameArea = document.querySelector(\n    \"#pokemon-name-player1\"\n  ) as HTMLHeadingElement;\n  const playerTwoActivePokemonNameArea = document.querySelector(\n    \"#pokemon-name-player2\"\n  ) as HTMLHeadingElement;\n  const createPokemon = (\n    player: Player,\n    imageArea: HTMLImageElement,\n    nameArea: HTMLHeadingElement\n  ) => {\n    if(player.getActivePokemon.isAlive()){\n      const pokemonName = player.getActivePokemon.name;\n      imageArea.style.display='block';\n      nameArea.style.display='block';\n      imageArea.setAttribute(\"src\", `./${pokemonName.toLowerCase()}.png`);\n      nameArea.textContent = pokemonName;\n    }else{\n      imageArea.style.display='none';\n      nameArea.style.display='none';\n    }\n    \n  };\n  createPokemon(\n    gameHandler.playerOne,\n    playerOneActivePokemonImageArea,\n    playerOneActivePokemonNameArea\n  );\n  \n  createPokemon(\n    gameHandler.playerTwo,\n    playerTwoActivePokemonImageArea,\n    playerTwoActivePokemonNameArea\n  );\n};\n","import { GameHandler } from \"../gameHandlerClass\";\n\nexport const createActivePlayer = (gameHandler: GameHandler) => {\n  const activePlayerArea = document.querySelector(\n    \"#active-player-info\"\n  ) as HTMLDivElement;\n  activePlayerArea.innerHTML = `<span>${gameHandler.currentPlayer.name}</span> now is your turn. What you gonna do now?`;\n  const playerOneUnderlineArea = document.querySelector(\"#fight-page-player1\");\n  const playerTwoUnderlineArea = document.querySelector(\"#fight-page-player2\");\n  const underlineOne = document.querySelector(\"#underline1\") as HTMLDivElement;\n  const underlineTwo = document.querySelector(\"#underline2\") as HTMLDivElement;\n  if (gameHandler.currentPlayer === gameHandler.playerOne) {\n    playerTwoUnderlineArea?.classList.remove(\"activePlayer\");\n    playerOneUnderlineArea?.classList.add(\"activePlayer\");\n    underlineTwo.style.animation =\n      \"scale-out-horizontal 0.5s cubic-bezier(0.550, 0.085, 0.680, 0.530) both\";\n    underlineOne.style.animation =\n      \"scale-in-hor-center 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both\";\n  } else {\n    playerOneUnderlineArea?.classList.remove(\"activePlayer\");\n    playerTwoUnderlineArea?.classList.add(\"activePlayer\");\n    underlineOne.style.animation =\n      \"scale-out-horizontal 0.5s cubic-bezier(0.550, 0.085, 0.680, 0.530) both\";\n    underlineTwo.style.animation =\n      \"scale-in-hor-center 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both\";\n  }\n};\n","import { Player } from \"../playerClass\";\n\nexport const createHPBars = (playerOne: Player, playerTwo: Player) => {\n  const createBar = (player: Player, HPBar: HTMLDivElement, headingHP: HTMLHeadingElement) => {\n    const maxHP = player.getActivePokemon.maxHP;\n    const currentHP = player.getActivePokemon.currentHP;\n    const HPInPercent = (currentHP / maxHP) * 100;\n    HPBar.style.width = `${HPInPercent}%`;\n    let HPClassList = HPBar.classList;\n    if (HPInPercent < 20) {\n      HPClassList.remove(\"hpBarHighLevel\");\n      HPClassList.add(\"hpBarLowLevel\");\n    } else {\n      HPClassList.remove(\"hpBarLowLevel\");\n      HPClassList.add(\"hpBarHighLevel\");\n    }\n\n    player.getActivePokemon.isAlive()\n      ? headingHP.style.display = 'grid'\n      : headingHP.style.display = 'none';\n\n  };\n  const playerOneHPBar = document.querySelector(\n    \"#hp-bar-player1\"\n  ) as HTMLDivElement;\n  const playerTwoHPBar = document.querySelector(\n    \"#hp-bar-player2\"\n  ) as HTMLDivElement;\n  const playerOneHeadingHP = document.querySelector(\n    \"#hpProgressBarPlayer1\"\n  ) as HTMLHeadingElement;\n  const playerTwoHeadingHP = document.querySelector(\n    \"#hpProgressBarPlayer2\"\n  ) as HTMLHeadingElement;\n  createBar(playerOne, playerOneHPBar, playerOneHeadingHP);\n  createBar(playerTwo, playerTwoHPBar, playerTwoHeadingHP);\n};\n","import { Player } from \"../playerClass\";\nimport { GameHandler } from \"../gameHandlerClass\";\n\nexport const createFightPagePokeballs = (gameHandler: GameHandler) => {\n  const changeClassOfDisabledPokemons = (\n    player: Player,\n    playerPokeballs: HTMLImageElement[]\n  ) => {\n    for (let i = 2; i > player.alivePokemons.length - 1; i--) {\n      playerPokeballs[i].classList.add(\"disabledPokemon\");\n    }\n  };\n  const playerOnePokeballs = Array.from(\n    document.querySelectorAll(\"#fight-page-player1 .pokeballWithPokemon\")\n  ) as HTMLImageElement[];\n  const playerTwoPokeballs = Array.from(\n    document.querySelectorAll(\"#fight-page-player2 .pokeballWithPokemon\")\n  ) as HTMLImageElement[];\n  changeClassOfDisabledPokemons(gameHandler.playerOne, playerOnePokeballs);\n  changeClassOfDisabledPokemons(gameHandler.playerTwo, playerTwoPokeballs);\n};\n","import { GameHandler } from \"../gameHandlerClass\";\nimport { attack, switchPoke, eatMango } from \"./buttonsEventListeners\";\n\nexport const updateMovesList = (\n  gameHandler: GameHandler,\n  calledFunction: any,\n  event: Event\n) => {\n  const moveList = document.querySelector(\".gameLogs\")!;\n  const newMove = document.createElement(\"p\");\n  let newMoveText = document.createTextNode(\"No move found\");\n  const pokemonName = gameHandler.currentPlayer.getActivePokemon.name;\n  const buttonContent = (event.currentTarget as HTMLDivElement).textContent;\n  const playerName = gameHandler.currentPlayer.name;\n  const opponentPlayerPokemonName = gameHandler.opponentPlayer.getActivePokemon.name;\n  switch (calledFunction) {\n    case attack:\n      newMoveText.nodeValue = `${playerName}: ${pokemonName} used ${buttonContent}!`;\n      if (!gameHandler.opponentPlayer.getActivePokemon.isAlive()) {\n      newMoveText.nodeValue += ` ${opponentPlayerPokemonName} is defeated!`;\n      }\n      break;\n    case switchPoke:\n      newMoveText.nodeValue = `${playerName} changed Pokemon: ${pokemonName} comes into play!`;\n      break;\n    case eatMango:\n      newMoveText.nodeValue = `${playerName} used mango: ${pokemonName} is healed!`;\n      break;\n    default:\n      console.log(\"No move found\");\n  }\n  newMove.append(newMoveText);\n  moveList.insertBefore(newMove, moveList.firstChild);\n};\n","import { Pokemon, PokemonType } from \"./pokemonClass\";\nimport { PokemonMove } from \"./pokemonClass\";\n\nexport class Fight {\n\n    private readonly _fightChart =\n        [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.5, 0, 1, 1, 0.5, 1],\n        [1, 0.5, 0.5, 1, 2, 2, 1, 1, 1, 1, 1, 2, 0.5, 1, 0.5, 1, 2, 1],\n        [1, 2, 0.5, 1, 0.5, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0.5, 1, 1, 1],\n        [1, 1, 2, 0.5, 0.5, 1, 1, 1, 0, 2, 1, 1, 1, 1, 0.5, 1, 1, 1],\n        [1, 0.5, 2, 1, 0.5, 1, 1, 0.5, 2, 0.5, 1, 0.5, 2, 1, 0.5, 1, 0.5, 1],\n        [1, 0.5, 0.5, 1, 2, 0.5, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 0.5, 1],\n        [2, 1, 1, 1, 1, 2, 1, 0.5, 1, 0.5, 0.5, 0.5, 2, 0, 1, 2, 2, 0.5],\n        [1, 1, 1, 1, 2, 1, 1, 0.5, 0.5, 1, 1, 1, 0.5, 0.5, 1, 1, 0, 2],\n        [1, 2, 1, 2, 0.5, 1, 1, 2, 1, 0, 1, 0.5, 2, 1, 1, 1, 2, 1],\n        [1, 1, 1, 0.5, 2, 1, 2, 1, 1, 1, 1, 2, 0.5, 1, 1, 1, 0.5, 1],\n        [1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 0.5, 1, 1, 1, 1, 0, 0.5, 1],\n        [1, 0.5, 1, 1, 2, 1, 0.5, 0.5, 1, 0.5, 2, 1, 1, 0.5, 1, 2, 0.5, 0.5],\n        [1, 2, 1, 1, 1, 2, 0.5, 1, 0.5, 2, 1, 2, 1, 1, 1, 1, 0.5, 1],\n        [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 0.5, 1, 1],\n        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 0.5, 0],\n        [1, 1, 1, 1, 1, 1, 0.5, 1, 1, 1, 2, 1, 1, 2, 1, 0.5, 1, 0.5],\n        [1, 0.5, 0.5, 0.5, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 0.5, 2],\n        [1, 0.5, 1, 1, 1, 1, 2, 0.5, 1, 1, 1, 1, 1, 1, 2, 2, 0.5, 1]];\n\n    private readonly _typesForChart = [\"normal\", \"fire\", \"water\", \"electric\", \"grass\", \"ice\", \"fighting\", \"poison\", \"ground\", \"flying\", \"psychic\", \"bug\", \"rock\", \"ghost\", \"dragon\", \"dark\", \"steel\", \"fairy\"]\n\n    private _getEffect(attackType: PokemonType, pokemonDefenceType: PokemonType): number {\n        if (!this._typesForChart.includes(attackType as string)) {\n            throw new Error(\"Attack type does not exist\")\n        } \n        if (!this._typesForChart.includes(pokemonDefenceType as string)) {\n            throw new Error(\"Pokemon type does not exist\")\n        }\n        return this._fightChart[this._typesForChart.indexOf(attackType)][this._typesForChart.indexOf(pokemonDefenceType)]\n    }\n\n    private _calcualteDamage(attackingPokemon: Pokemon, deffendingPokemon: Pokemon, move: PokemonMove): number {\n        const minimumDamage = 5;\n        const baseDamage: number = attackingPokemon.attackPoints - deffendingPokemon.defensePoints;\n        return Math.max(baseDamage, minimumDamage) * this.calculateAttackEffectiveness(move.moveType, deffendingPokemon.types);\n    }\n\n    calculateAttackEffectiveness(attackType: PokemonType, pokemonDefenceTypes: PokemonType[]): number {\n        const damagePerType: number[] = pokemonDefenceTypes.map( (pokemonType: any): number => this._getEffect(attackType, pokemonType))\n        return damagePerType.reduce( (accumulator: number, value: number) => accumulator * value, 1)\n    }\n\n    fight(attackingPokemon: Pokemon, deffendingPokemon: Pokemon, move: PokemonMove): number {\n        const damage: number = this._calcualteDamage(attackingPokemon, deffendingPokemon, move);\n        deffendingPokemon.subtractHP(damage);\n        return damage\n    }\n}\n","import { GameHandler } from \"../gameHandlerClass\";\n\nexport const showResultModal = (GameHandler: GameHandler) => {\n  const screenToDisplay = document.querySelector(\n    \"#gameresult-modal-screen\"\n  ) as HTMLDivElement;\n  const winnerName = GameHandler.getWinner().name;\n  const resultHeader = screenToDisplay.querySelector(\"#modal-header\")!;\n  resultHeader.textContent = `${winnerName} won!`;\n  const playAgainButton = screenToDisplay.querySelector(\n    \".modalPlayAgainButton\"\n  ) as HTMLDivElement;\n  playAgainButton.addEventListener(\"click\", () => document.location.reload());\n  screenToDisplay.style.display = \"flex\";\n};\n","import { GameHandler } from \"../gameHandlerClass\";\n\nconst selectPokemonImage = () => {\n  return [\n     document.getElementById(\"pokemon-image-player1\") as HTMLImageElement, \n     document.getElementById(\"pokemon-image-player2\") as HTMLImageElement,\n     document.querySelector(\".boom-player1\") as HTMLDivElement,\n     document.querySelector(\".boom-player2\") as HTMLDivElement,\n     document.querySelector(\".animation-div-player1\") as HTMLDivElement,\n     document.querySelector(\".animation-div-player2\") as HTMLDivElement\n   ];\n}\n\nexport const animationShowCurrentPokemon = (gameHandler: GameHandler) => {\n const pokemonImage = selectPokemonImage();\n if(gameHandler.playerOne.name === gameHandler.currentPlayer.name) {\n   //Active Player 1\n   pokemonImage[0].style.filter = \"brightness(110%)\";\n   pokemonImage[1].style.filter = \"brightness(90%)\";\n } else {\n   //Active Player 2\n   pokemonImage[0].style.filter= \"brightness(90%)\";\n   pokemonImage[1].style.filter = \"brightness(110%)\";\n }\n} \n\nexport const animationHittedPokemon = (gameHandler: GameHandler) => {\n const pokemonImage = selectPokemonImage();\n if(gameHandler.playerOne.name === gameHandler.currentPlayer.name) {\n   pokemonImage[3].style.display = \"block\";\n   setTimeout(()=>{\n     pokemonImage[3].style.display = \"none\";\n     pokemonImage[1].style.animation = \"jello-horizontal 0.7s both\";\n     pokemonImage[1].style.animationDelay = \"0.2s\";\n   }, 500);\n } else {\n   pokemonImage[2].style.display = \"block\";\n   setTimeout(()=>{\n     pokemonImage[2].style.display = \"none\";\n     pokemonImage[0].style.animation = \"jello-horizontal 0.7s both\";\n     pokemonImage[0].style.animationDelay = \"0.2s\";\n   }, 500);\n }\n setTimeout(() => {\n   pokemonImage[0].style.animation = \"none\";\n   pokemonImage[1].style.animation = \"none\";\n }, 1500)\n}\n\nexport const animationSwitchPokemon = (gameHandler: GameHandler) => {\n const pokemonImage = selectPokemonImage();\n pokemonImage[0].style.filter = \"none\";\n pokemonImage[1].style.filter = \"none\";\n if(gameHandler.playerOne.name === gameHandler.currentPlayer.name) {\n    pokemonImage[0].style.animation = \"bounce-in-fwd 1s both\";\n } else {\n    pokemonImage[1].style.animation = \"bounce-in-fwd 1s both\";\n }\n setTimeout(() => {\n  pokemonImage[0].style.animation = \"none\";\n  pokemonImage[1].style.animation = \"none\";\n}, 1000)\n}\n\nexport const animationEatMango = (gameHandler: GameHandler) => {\n  const pokemonImage = selectPokemonImage();\n  if(gameHandler.playerOne.name === gameHandler.currentPlayer.name) {\n    pokemonImage[4].style.display = \"block\";\n    setTimeout(() => {\n      pokemonImage[4].style.display = \"none\";\n    },1000);\n  } else {\n    pokemonImage[5].style.display = \"block\";\n    setTimeout(() => {\n      pokemonImage[5].style.display = \"none\";\n    },1000);\n  }\n }","import { GameHandler } from \"../gameHandlerClass\";\nimport { createActivePokemon } from \"./createActivePokemon\";\nimport { createActivePlayer } from \"./createActivePlayer\";\nimport { createHPBars } from \"./createHPBars\";\nimport { createFightPagePokeballs } from \"./createFightPagePokeballs\";\nimport { updateMovesList } from \"./updateMovesList\";\nimport { Fight } from \"../fightClass\"\nimport { PokemonMove } from \"../pokemonClass\";\nimport { showResultModal } from \"./resultModalPopUpFunctions\";\nimport {\n  animationShowCurrentPokemon,\n  animationHittedPokemon,\n  animationSwitchPokemon,\n  animationEatMango\n} from \"./animations\";\n\nexport const actionsButtonEventListener = (gameHandler: GameHandler) => {\n  const battleButtons = document.getElementsByClassName(\n    \"battleButton\"\n  )! as HTMLCollectionOf<HTMLElement>;\n  const attackButton = document.querySelector(\n    \"#attackButton\"\n  )! as HTMLDivElement;\n  const switchButton = document.querySelector(\n    \"#switchButton\"\n  )! as HTMLDivElement;\n  const mangoButton = document.querySelector(\"#mangoButton\")! as HTMLDivElement;\n  const mango = document.querySelector(\"#mango\")! as HTMLDivElement;\n\n  animationShowCurrentPokemon(gameHandler);\n  animationButtonsEntry(battleButtons);\n\n  attackButton.addEventListener(\"click\", () => {\n    animationButtonsExit(battleButtons);\n    gameHandler.generateAttackButtons();\n  });\n  switchButton.addEventListener(\"click\", () => {\n    animationButtonsExit(battleButtons);\n    gameHandler.generateSwitchButtons();\n  });\n\n  if (gameHandler.currentPlayer.hasMango) {\n    magicFunction(mangoButton, battleButtons, gameHandler, eatMango);\n  } else {\n    mango.innerHTML = \"0\";\n    mangoButton.classList.add(\"disabledButton\");\n  }\n};\n\nexport const attacksButtonEventListener = (gameHandler: GameHandler) => {\n  const attackButtonOne = document.querySelector(\n    \"#attackButtonOne\"\n  )! as HTMLDivElement;\n  const attackButtonTwo = document.querySelector(\n    \"#attackButtonTwo\"\n  )! as HTMLDivElement;\n  const battleButtons = document.getElementsByClassName(\n    \"battleButton\"\n  )! as HTMLCollectionOf<HTMLElement>;\n  const backButton = document.querySelector(\"#backButton\")! as HTMLDivElement;\n\n  animationShowCurrentPokemon(gameHandler);\n  animationButtonsEntry(battleButtons);\n  magicFunction(attackButtonOne, battleButtons, gameHandler, attack);\n  magicFunction(attackButtonTwo, battleButtons, gameHandler, attack);\n  magicFunction(backButton, battleButtons, gameHandler);\n};\n\n\nexport const switchButtonEventListener = (\n  gameHandler: GameHandler\n) => {\n  const switchButtonOne = document.querySelector(\n    \"#switchButtonOne\"\n  )! as HTMLDivElement;\n  const switchButtonTwo = document.querySelector(\n    \"#switchButtonTwo\"\n  )! as HTMLDivElement;\n  const battleButtons = document.getElementsByClassName(\n    \"battleButton\"\n  )! as HTMLCollectionOf<HTMLElement>;\n  const backButton = document.querySelector(\"#backButton\")! as HTMLDivElement;\n\n  animationShowCurrentPokemon(gameHandler);\n  animationButtonsEntry(battleButtons);\n\n  if (switchButtonOne) magicFunction(switchButtonOne, battleButtons, gameHandler, switchPoke);\n  if (switchButtonTwo) magicFunction(switchButtonTwo, battleButtons, gameHandler, switchPoke);\n  if (backButton) magicFunction(backButton, battleButtons, gameHandler);\n};\n\nconst magicFunction = (\n  button: HTMLDivElement,\n  buttons: HTMLCollectionOf<HTMLElement>,\n  gameHandler: GameHandler,\n  functionToCall?: any\n) => {\n  button.addEventListener(\"click\", (e) => {\n    if (functionToCall) {\n      functionToCall(gameHandler, e);\n      checkIfGameIsOver(gameHandler);\n      updateMovesList(gameHandler, functionToCall, e);\n      createHPBars(gameHandler.playerOne, gameHandler.playerTwo);\n      createFightPagePokeballs(gameHandler);\n      gameHandler.switchPlayer();\n      createActivePlayer(gameHandler);\n      createActivePokemon(gameHandler);\n    }\n    setTimeout(() => {\n      gameHandler.currentPlayer.getActivePokemon.isAlive()\n        ? gameHandler.generateActionButtons()\n        : gameHandler.generateSwitchButtons();\n    }, 1000);\n    animationButtonsExit(buttons);\n  });\n};\n\nconst animationButtonsEntry = (buttons: HTMLCollectionOf<HTMLElement>) => {\n  for (let i = 0; i < buttons.length; i++) {\n    buttons[i].style.animation =\n      \"scale-in-hor-center 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both\";\n    buttons[i].style.animationDelay = `${i * 0.15}s`;\n  }\n};\n\nconst animationButtonsExit = (buttons: HTMLCollectionOf<HTMLElement>) => {\n  for (let i = 0; i < buttons.length; i++) {\n    buttons[i].style.animation =\n      \"scale-out-horizontal 0.5s cubic-bezier(0.550, 0.085, 0.680, 0.530) both\";\n    buttons[i].style.animationDelay = `${i * 0.15}s`;\n  }\n};\n\nconst checkIfGameIsOver = (gameHandler: GameHandler) => {\n  if (gameHandler.isGameFinished() === true) {\n    setTimeout(() => {\n      showResultModal(gameHandler);\n    }, 1500)\n  }\n};\n\nexport const attack = (gameHandler: GameHandler, e: Event) => {\n  animationHittedPokemon(gameHandler);\n  \n  const fight = new Fight()\n  const pokemon = gameHandler.currentPlayer.getActivePokemon;\n  if (e !== null) {\n    const target: HTMLDivElement = e.target as HTMLDivElement\n\n    const move: PokemonMove = pokemon.moves.find(move => move.moveName === target.textContent) as PokemonMove\n    const attackingPoke = gameHandler.currentPlayer.getActivePokemon;\n    const defendingPoke = gameHandler.opponentPlayer.getActivePokemon;\n  \n    const damage: number = fight.fight(attackingPoke, defendingPoke, move as PokemonMove)\n  }\n};\n\nexport const switchPoke = (gameHandler: GameHandler, event: Event) => {\n  animationSwitchPokemon(gameHandler);\n  const nameOfChosenPokemon = (event.currentTarget as HTMLDivElement)\n    .textContent;\n  gameHandler.switchPokemon(nameOfChosenPokemon!);\n};\n\nexport const eatMango = (gameHandler: GameHandler) => {\n  animationEatMango(gameHandler);\n  const mangoButton = document.querySelector(\"#mangoButton\")! as HTMLDivElement;\n  const mango = document.querySelector(\"#mango\")! as HTMLDivElement;\n  gameHandler.currentPlayer.useMango();\n  mango.innerHTML = \"0\";\n  mangoButton.classList.add(\"disabledButton\");\n};\n","import { Player } from \"./playerClass\";\nimport {\n  actionsButtonEventListener,\n  attacksButtonEventListener,\n  switchButtonEventListener,\n} from \"./fightPage/buttonsEventListeners\";\n\ninterface IGameHandler{\n  currentPlayer: Player;\n  isGameFinished(): boolean;\n  getWinner(): Player | Error;\n  switchPlayer(): void;\n  switchPokemon(pokemonName: string):void;\n  generateActionButtons(): void;\n  generateAttackButtons(): void;\n  generateSwitchButtons(): void;\n}\n\nexport class GameHandler implements IGameHandler{\n  constructor(\n    private readonly _playerOne: Player,\n    private readonly _playerTwo: Player\n  ) {}\n\n  private _currentPlayer: Player = this._playerOne;\n\n  get playerOne() {\n    return this._playerOne;\n  }\n\n  get playerTwo() {\n    return this._playerTwo;\n  }\n\n  get currentPlayer(): Player {\n    return this._currentPlayer;\n  }\n\n  get opponentPlayer(): Player {\n    if (this._currentPlayer === this._playerOne) return this._playerTwo;\n    return this._playerOne;\n  }\n\n  private didPlayerLoose(player: Player): boolean {\n    return player.alivePokemons.length === 0;\n  }\n\n  isGameFinished(): boolean {\n    return (\n      this.didPlayerLoose(this._playerOne) ||\n      this.didPlayerLoose(this._playerTwo)\n    );\n  }\n\n  getWinner(): Player | Error {\n    if (!this.isGameFinished())\n      throw new Error(\"You cannot get the winner. The game is not over.\");\n    return this.didPlayerLoose(this._playerOne) === true\n      ? this._playerTwo\n      : this._playerOne;\n  }\n\n  switchPlayer(): void {\n    this._currentPlayer =\n      this._currentPlayer === this._playerOne\n        ? this._playerTwo\n        : this._playerOne;\n  }\n\n  switchPokemon(pokemonName: string) {\n    this._currentPlayer.indexOfActivePokemon = this._currentPlayer.pokemons.findIndex(\n      (pokemon) => pokemon.name === pokemonName\n    );\n  }\n\n  generateActionButtons(): void {\n    const player = this.currentPlayer;\n    const actionContainer = document.querySelector(\"#actionModals\")!;\n    actionContainer.innerHTML = `\n                    <div class=\"button battleButton\" id=\"attackButton\">attack</div>\n                    <div class=\"button battleButton\" id=\"switchButton\">switch</div>\n                    <div class=\"button battleButton\" id=\"mangoButton\">use mango (<span id=\"mango\">1</span>)</div>`;\n    actionsButtonEventListener(this);\n  }\n\n  generateAttackButtons(): void {\n    const player = this.currentPlayer;\n    const actionContainer = document.querySelector(\"#actionModals\")!;\n    actionContainer.innerHTML = `\n                    <div class=\"button battleButton\" id=\"attackButtonOne\">${player.getActivePokemon.moves[0].moveName}</div>\n                    <div class=\"button battleButton\" id=\"attackButtonTwo\">${player.getActivePokemon.moves[1].moveName}</div>\n                    <div class=\"button battleButton\" id=\"backButton\">back</div>`;\n    attacksButtonEventListener(this);\n  }\n\n  generateSwitchButtons(): void {\n    const player = this.currentPlayer;\n    const actionContainer = document.querySelector(\"#actionModals\")!;\n    const pokemonOne = player.notActivePokemons[0];\n    const pokemonTwo = player.notActivePokemons[1];\n    actionContainer.innerHTML = \"\"\n    if (pokemonOne.isAlive()) actionContainer.innerHTML += `<div class=\"button battleButton\" id=\"switchButtonOne\">${pokemonOne.name}</div>`;\n    if (pokemonTwo.isAlive()) actionContainer.innerHTML += `<div class=\"button battleButton\" id=\"switchButtonTwo\">${pokemonTwo.name}</div>`;\n    if (this.currentPlayer.getActivePokemon.isAlive()) {\n      actionContainer.innerHTML += `<div class=\"button battleButton\" id=\"backButton\">back</div>`;\n    }\n    switchButtonEventListener(this);\n  }\n}\n","import { GameHandler } from \"../gameHandlerClass\";\nimport { createActivePokemon } from \"./createActivePokemon\";\nimport { createActivePlayer } from \"./createActivePlayer\";\nimport { createHPBars } from \"./createHPBars\";\nimport { createFightPagePokeballs } from \"./createFightPagePokeballs\";\nimport { Pokemon } from \"../pokemonClass\";\n\nconst createPlayerFightNames = (gameHandler: GameHandler) => {\n  const playerOneName = document.querySelector(\n    \"#fight-page-player1-name\"\n  ) as HTMLHeadingElement;\n  const playerTwoName = document.querySelector(\n    \"#fight-page-player2-name\"\n  ) as HTMLHeadingElement;\n  playerOneName.textContent = gameHandler.playerOne.name;\n  playerTwoName.textContent = gameHandler.playerTwo.name;\n};\n\nexport const createFightPage = (\n  appDiv: HTMLDivElement,\n  gameHandler: GameHandler\n) => {\n  const fightPage = document.querySelector(\n    \"#fight-page-template\"\n  ) as HTMLTemplateElement;\n  const resultsModal = document.querySelector(\"#gameresult-modal-template\");\n  appDiv.innerHTML = fightPage.innerHTML;\n  appDiv.innerHTML += resultsModal?.innerHTML;\n  createPlayerFightNames(gameHandler);\n  createActivePlayer(gameHandler);\n  createActivePokemon(gameHandler);\n  createHPBars(gameHandler.playerOne, gameHandler.playerTwo);\n  createFightPagePokeballs(gameHandler);\n  gameHandler.generateActionButtons();\n};\n","import { Player } from \"../playerClass\";\nimport { GameHandler } from \"../gameHandlerClass\";\nimport { createFightPage } from \"./renderFightPage\";\n\nexport const startBattle = (\n  playerOne: Player,\n  playerTwo: Player,\n  app: HTMLDivElement\n) => {\n  const game = new GameHandler(playerOne, playerTwo);\n  setTimeout(() => createFightPage(app, game), 2000);\n};\n","import { Player } from \"../playerClass\";\nimport { startBattle } from \"../fightPage/startBattle\";\n\n\nexport const startGameIfReady = (playerOne: Player, playerTwo: Player) => {\n  if (playerOne.pokemons.length < 3 || playerTwo.pokemons.length < 3) return;\n  const app = document.querySelector(\"#app\") as HTMLDivElement;\n  startBattle(playerOne, playerTwo, app);\n};\n","import { Pokemon } from \"../pokemonClass\";\nimport { PokemonFactory } from \"../pokemonFactory\";\nimport { Player } from \"../playerClass\";\n\nexport const addChosenPokemon = (\n  event: Event,\n  factory: PokemonFactory,\n  activePlayer: Player\n) => {\n  const clickedPokemon = event.target as HTMLImageElement;\n  const pokemonName = clickedPokemon.id;\n  const newPokemonObject: Pokemon = factory.getPokemonByName(pokemonName);\n  activePlayer.addPokemon(newPokemonObject);\n  setTimeout(() => {\n    clickedPokemon.setAttribute(\"id\", \"disabledImg\");\n  }, 500);\n  clickedPokemon.style.animation = \"heartbeat 1s ease-in-out both\";\n};\n","import { Player } from \"../playerClass\";\n\nexport const createPokeballs = (playerOne: Player, activePlayer: Player) => {\n  const playerPokeballs: HTMLImageElement[] =\n    activePlayer === playerOne\n      ? Array.from(document.querySelectorAll(\"#choosePagePlayer1 img\"))\n      : Array.from(document.querySelectorAll(\"#choosePagePlayer2 img\"));\n  const playerLastPokemonName: string = activePlayer.pokemons[\n    activePlayer.pokemons.length - 1\n  ].name.toLowerCase();\n  const numberOfLastPokemon: number = activePlayer.pokemons.length - 1;\n  playerPokeballs[numberOfLastPokemon].setAttribute(\n    \"src\",\n    `./${playerLastPokemonName}.png`\n  );\n  playerPokeballs[numberOfLastPokemon].style.animation = \"bounce-in-fwd 1.1s both\";\n};\n","import { Player } from \"../playerClass\";\nimport { PokemonFactory } from \"../pokemonFactory\";\nimport * as data from \"../../assets/poke_data.json\";\nimport { startGameIfReady } from \"./startGameIfReady\";\nimport { addChosenPokemon } from \"./addChosenPokemon\";\nimport { createPokeballs } from \"./createPokeballs\";\nimport { createActivePlayerName } from \"./createActivePlayerName\";\n\nexport const createPokemons = (\n  playerOne: Player,\n  playerTwo: Player,\n  activePlayer: Player\n) => {\n  const pokeData = data.pokemons;\n  const pokemonFactory = new PokemonFactory(pokeData);\n  const pokemonImages = Array.from(\n    document.querySelectorAll(\"#pokemonList img\")\n  ) as [HTMLImageElement];\n\n  pokemonImages.forEach((pokemonImage) =>\n    pokemonImage.addEventListener(\n      \"click\",\n      (e) => {\n        if (activePlayer.pokemons.length === 3) return;\n        addChosenPokemon(e, pokemonFactory, activePlayer);\n        createPokeballs(playerOne, activePlayer);\n        // change player\n        activePlayer = activePlayer === playerOne ? playerTwo : playerOne;\n        createActivePlayerName(activePlayer);\n        startGameIfReady(playerOne, playerTwo);\n      },\n      { once: true }\n    )\n  );\n};\n","import { Player } from \"../playerClass\";\nimport { createActivePlayerName } from \"./createActivePlayerName\";\nimport { createPlayerNames } from \"./createPlayerNames\";\nimport { createPokemons } from \"./createPokemons\";\n\nexport const createChoosePage = (playerOne: Player, playerTwo: Player) => {\n  let activePlayer = playerOne;\n  createPlayerNames(playerOne, playerTwo);\n  createActivePlayerName(activePlayer);\n  createPokemons(playerOne, playerTwo, activePlayer);\n};\n","import { Pokemon } from \"./pokemonClass\";\n\ninterface IPlayer{\n  name: string;\n  pokemons: Pokemon[];\n  indexOfActivePokemon: number;\n  hasMango: Boolean;\n  useMango(): void | Error;\n  addPokemon(pokemon: Pokemon): void;\n}\n\nexport class Player implements IPlayer {\n  private _name: string;\n  private _pokemons: Pokemon[];\n  private _indexOfActivePokemon: number;\n  private _hasMango: Boolean;\n  constructor(name: string, pokemons: Pokemon[]) {\n    if (name.length > 8) {\n      throw new Error(\"Too long name\");\n    }\n    if (pokemons.length > 3) {\n      throw new Error(\"Wrong number of pokemons\");\n    }\n    this._name = name;\n    this._pokemons = pokemons;\n    this._indexOfActivePokemon = 0;\n    this._hasMango = true;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n  get pokemons(): Pokemon[] {\n    return this._pokemons;\n  }\n\n  set indexOfActivePokemon(numOfActivePokemon: number) {\n    this._indexOfActivePokemon = numOfActivePokemon;\n  }\n  get getActivePokemon(): Pokemon {\n    return this._pokemons[this._indexOfActivePokemon];\n  }\n\n  get alivePokemons(): Pokemon[] {\n    const alivePokemonsTab: Pokemon[] = this.pokemons.filter((pokemon) =>\n      pokemon.isAlive()\n    );\n    return alivePokemonsTab;\n  }\n\n  useMango(): void | Error {\n    if (!this._hasMango)\n      throw new Error(\"You cannot use mango. You use all mangos\");\n    this._hasMango = false;\n    this.getActivePokemon.heal();\n  }\n\n  get hasMango() {\n    return this._hasMango;\n  }\n\n  addPokemon(pokemon: Pokemon): void {\n    this._pokemons.push(pokemon);\n  }\n\n  get notActivePokemons(): Pokemon[] {\n    return this.pokemons.filter(\n      (pokemon) => pokemon.name !== this.getActivePokemon.name\n    );\n  }\n}\n","export const activateStart = (name1Input: HTMLInputElement, name2Input: HTMLInputElement, startButton: HTMLButtonElement) => {\n    if (name1Input.value.length > 0 && name2Input.value.length > 0 && name1Input.value.length <= 8 && name2Input.value.length <= 8) {\n        startButton.className = 'button-enabled'\n        startButton.disabled = false;\n    } else {\n        startButton.className = 'button-disabled'\n        startButton.disabled = true;\n    }\n}\n\n","import { showModal, hideModal } from \"./modalPopUpFunctions\";\nimport { createChoosePage } from \"./choosePokemonsPage/choosePokemonsPage\"\nimport { Player } from \"./playerClass\";\nimport { activateStart } from './activateStart';\n\nconst renderStartingPage = (appDiv: HTMLDivElement) => {\n  const startingPage = document.querySelector(\n    \"#starting-page-template\"\n  ) as HTMLTemplateElement;\n  appDiv.innerHTML = startingPage.innerHTML;\n};\nconst renderHowToPlayModal = (appDiv: HTMLDivElement) => {\n  const infoModal = document.querySelector(\n    \"#info-modal-template\"\n  ) as HTMLTemplateElement;\n  appDiv.innerHTML += infoModal.innerHTML;\n};\n\nconst renderAuthorsModal = (appDiv: HTMLDivElement) => {\n  const authorsModal = document.querySelector(\n    \"#authors-modal-template\"\n  ) as HTMLTemplateElement;\n  appDiv.innerHTML += authorsModal.innerHTML;\n};\n\nconst renderAboutModal = (appDiv: HTMLDivElement) => {\n  const aboutModal = document.querySelector(\n    \"#about-modal-template\"\n  ) as HTMLTemplateElement;\n  appDiv.innerHTML += aboutModal.innerHTML;\n};\n\nconst createHowToPlayButton = () => {\n  const howToPlayButton = document.querySelector(\n    \"#how-to-play-button\"\n  ) as HTMLUListElement;\n  const infoModal = document.querySelector(\n    \"#info-modal-screen\"\n  ) as HTMLDivElement;\n  howToPlayButton.addEventListener(\"click\", () => {\n    showModal(infoModal, \"flex\");\n  });\n  hideModal(infoModal);\n};\n\nconst createAuthorsButton = () => {\n  const authorsButton = document.querySelector(\n    \"#authors-button\"\n  ) as HTMLUListElement;\n  const authorsModal = document.querySelector(\n    \"#authors-modal-screen\"\n  ) as HTMLDivElement;\n  authorsButton.addEventListener(\"click\", () => {\n    showModal(authorsModal, \"flex\");\n  });\n  hideModal(authorsModal);\n};\n\nconst createAboutButton = () => {\n  const aboutButton = document.querySelector(\n    \"#about-button\"\n  ) as HTMLUListElement;\n  const aboutModal = document.querySelector(\n    \"#about-modal-screen\"\n  ) as HTMLDivElement;\n  aboutButton.addEventListener(\"click\", () => {\n    showModal(aboutModal, \"flex\");\n  });\n  hideModal(aboutModal);\n};\n\nconst activateStartButton = () => {\n  const player1NameInput = document.querySelector('#enter-player1-name') as HTMLInputElement;\n  const player2NameInput = document.querySelector('#enter-player2-name') as HTMLInputElement;\n  const startButton = document.querySelector(\"#start-game-button\") as HTMLButtonElement;\n  player1NameInput.addEventListener(\"keyup\", () => {\n      activateStart(player1NameInput, player2NameInput, startButton)\n  })\n  player2NameInput.addEventListener(\"keyup\", () => {\n      activateStart(player1NameInput, player2NameInput, startButton)\n  });\n};\n\nconst renderChoosePokemonScreen = (appDiv: HTMLDivElement) => {\n  const playButton = document.querySelector(\n    \"#start-game-button\"\n  ) as HTMLButtonElement;\n  playButton?.addEventListener(\"click\", () => {\n    const player1NameInput = (document.querySelector('#enter-player1-name') as HTMLInputElement).value;\n    const player2NameInput = (document.querySelector('#enter-player2-name') as HTMLInputElement).value;\n    const choosePokemonScreen = document.querySelector(\n      \"#choose-page-template\"\n    ) as HTMLTemplateElement;\n    appDiv.innerHTML = choosePokemonScreen.innerHTML;\n    createChoosePage(new Player(player1NameInput, []), new Player(player2NameInput, []));\n  });\n}\n\nexport const renderApp = () => {\n  const app = document.querySelector(\"#app\") as HTMLDivElement;\n  renderStartingPage(app);\n  renderHowToPlayModal(app);\n  renderAuthorsModal(app);\n  renderAboutModal(app);\n  activateStartButton();\n  createHowToPlayButton();\n  createAuthorsButton();\n  createAboutButton();\n  renderChoosePokemonScreen(app);\n};\n\nsetTimeout(renderApp, 2000);\n\n"]}